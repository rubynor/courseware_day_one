TODO
--

(This exercise text lifted from the Code Golf competition at
http://stackoverflow.com/questions/3499538/code-golf-conways-game-of-life)

For those who haven't heard of Game of Life, you take a grid (ideally
infinite) of square cells. Cells can be alive (filled) or dead
(empty). We determine which cells are alive in the next step of time
by applying the following rules:

Any live cell with fewer than two live neighbours dies, as if caused
by under-population.

Any live cell with more than three live neighbours dies, as if by
overcrowding.

Any live cell with two or three live neighbours lives on to the next
generation.

Any dead cell with exactly three live neighbours becomes a live cell,
as if by reproduction.

Your program will read in a 40x80 character ASCII text file specified
as a command-line argument, as well as the number of iterations (N) to
perform. Finally, it will output to an ASCII file out.txt the state of
the system after N iterations.

Here is an example run with relevant files:

in.txt:

................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
..................................XX............................................
..................................X.............................................
.......................................X........................................
................................XXXXXX.X........................................
................................X...............................................
.................................XX.XX...XX.....................................
..................................X.X....X.X....................................
..................................X.X......X....................................
...................................X.......XX...................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
Iterate 100 times:

Q:\>life in.txt 100
Resultant Output (out.txt)

................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
..................................XX............................................
..................................X.X...........................................
....................................X...........................................
................................XXXXX.XX........................................
................................X.....X.........................................
.................................XX.XX...XX.....................................
..................................X.X....X.X....................................
..................................X.X......X....................................
...................................X.......XX...................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................
................................................................................


The Rules:

You need to use file I/O to read/write the files.
You need to accept an input file and the number of iterations as arguments
You need to generate out.txt (overwrite if it exists) in the specified format
You don't need to deal with the edges of the board (wraparound, infinite grids .etc)
